<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>tw.elliot</groupId>
	<artifactId>daoDemo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>daoDemo</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring.version>4.3.6.RELEASE</spring.version>
		<struts.version>2.2.3.1</struts.version>
		<slf4j.version>1.7.23</slf4j.version>
		<hibernate.version>5.2.7.Final</hibernate.version>
        <clover.version>4.0.1</clover.version>

		<!-- for system.properties -->
		<jdbc.driverClass>org.h2.Driver</jdbc.driverClass>
		<jdbc.url>jdbc:h2:tcp://localhost/~/test</jdbc.url>
		<jdbc.user>sa</jdbc.user>
		<jdbc.password></jdbc.password>
		<hibernate.database>H2</hibernate.database>
		<hibernate.dialect>org.hibernate.dialect.H2Dialect
		</hibernate.dialect>
		<hibernate.show_sql>true</hibernate.show_sql>
		<hibernate.format_sql>true</hibernate.format_sql>
		<hibernate.generate_statistics>true</hibernate.generate_statistics>
		<hibernate.hbm2ddl.auto>update</hibernate.hbm2ddl.auto>
		<hibernate.cache.use_second_level_cache>true
		</hibernate.cache.use_second_level_cache>
		<hibernate.generate_ddl>true</hibernate.generate_ddl>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${spring.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.1</version>
		</dependency>
		<!-- 用以取代commons-logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<!-- 用以取代Log4j，若確定系統中都是透過commons-logging並未直接呼叫log4j的話可以不用加此設定 <dependency> 
			<groupId>org.slf4j</groupId> <artifactId>log4j-over-slf4j</artifactId> <version>${slf4j.version}</version> 
			</dependency> -->

		<!-- J2EE Spec -->
		<!-- <dependency> <groupId>javax</groupId> <artifactId>javaee-web-api</artifactId> 
			<version>6.0</version> <scope>provided</scope> </dependency> -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.1.0.Final</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
			<scope>provided</scope>
		</dependency>
		<!-- End of J2EE Spec -->

		<!-- Hibernate Libraries -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<!-- Merge into core from 3.6.0 <dependency> <groupId>org.hibernate</groupId> 
			<artifactId>hibernate-annotations</artifactId> <version>${hibernate.version}</version> 
			</dependency> -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<version>1.0.0.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>${hibernate.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.4.0.Final</version>
		</dependency>
		<!-- Hibernate Dependency -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>3.2.4</version>
		</dependency>

		<!-- Connection Pool -->
		<dependency>
			<groupId>com.mchange</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.5.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>2.1.1</version>
		</dependency>
		<dependency>
			<groupId>com.jolbox</groupId>
			<artifactId>bonecp-spring</artifactId>
			<version>0.8.0.RELEASE</version>
		</dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>2.6.0</version>
        </dependency>

		<!-- Database -->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.3.4</version>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.193</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>6.0.5</version>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>spring-struts</artifactId> 
			<version>${spring.version}</version> </dependency> -->
		<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>spring-data-jpa</artifactId> 
			<version>1.3.0.RELEASE</version> </dependency> -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		<!-- End of Spring -->

		<!-- Spring Dependency -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.8.10</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.8.10</version>
		</dependency>
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.21.0-GA</version>
			<scope>runtime</scope>
		</dependency>
		<!-- End of Spring Dependency -->
		<!-- iBatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.4.2</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>21.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>1.11.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.9.7</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time-hibernate</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>org.jadira.usertype</groupId>
			<artifactId>usertype.jodatime</artifactId>
			<version>2.0.1</version>
		</dependency>
		<!-- JSON Library -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.9.13</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/personal</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>
		<!-- <pluginManagement> <plugins> <plugin> <groupId>org.codehaus.mojo</groupId> 
			<artifactId>sql-maven-plugin</artifactId> <version>1.5</version> <dependencies> 
			<dependency> <groupId>com.h2database</groupId> <artifactId>h2</artifactId> 
			<version>1.3.160</version> </dependency> </dependencies> </plugin> </plugins> 
			</pluginManagement> -->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- 要求Emma Plugin 在 process-classes 時執行instrument, 但在test 與site時都略過執行 -->
			<!-- <plugin> <groupId>org.sonatype.maven.plugin</groupId> <artifactId>emma-maven-plugin</artifactId> 
				<version>1.2</version> <executions> <execution> <id>instrument</id> <phase>process-classes</phase> 
				<goals> <goal>instrument</goal> </goals> </execution> <execution> <id>test</id> 
				<phase>test</phase> <configuration> <skip>true</skip> </configuration> </execution> 
				<execution> <id>site</id> <phase>site</phase> <configuration> <skip>true</skip> 
				</configuration> </execution> </executions> </plugin> -->
			<!-- 由Surefire指定classesDirectory， 該directory下存放的是被emma instrumented過的Class, 
				執行完後自然就會產生emma report所需要的資料 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<inherited>true</inherited>
				<!-- <configuration> <forkMode>once</forkMode> <reportFormat>xml</reportFormat>
					<classesDirectory>${project.build.directory}/generated-classes/emma/classes</classesDirectory> 
					</configuration> -->
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.7.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.17</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>1.9.5</version>
				<configuration>
					<connectionType>connection</connectionType>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.9</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.6</version>
				<configuration>

				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>


		</plugins>
	</reporting>
	<scm>
		<connection>scm:git:git://github.com/ElliotChen/daoDemo.git</connection>
		<developerConnection>scm:git:git@github.com:ElliotChen/daoDemo.git</developerConnection>
		<url>git://github.com/ElliotChen/daoDemo.git</url>
	</scm>
	<repositories>
		<repository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Repository Group</name>
			<url>http://repository.jboss.org/nexus/content/groups/public/</url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Repository Group</name>
			<url>http://repository.jboss.org/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<profiles>
		<profile>
			<id>production</id>
			<properties>
				<jdbc.driverClass>com.mysql.jdbc.Driver</jdbc.driverClass>
				<jdbc.url>jdbc:mysql://192.168.1.13:3306/elitech</jdbc.url>
				<jdbc.user>elitech</jdbc.user>
				<jdbc.password>25146875</jdbc.password>
				<hibernate.database>MySQL with InnoDB</hibernate.database>
				<hibernate.dialect>org.hibernate.dialect.MySQLInnoDBDialect
				</hibernate.dialect>
				<hibernate.show_sql>true</hibernate.show_sql>
				<hibernate.format_sql>true</hibernate.format_sql>
				<hibernate.generate_statistics>true</hibernate.generate_statistics>
				<hibernate.hbm2ddl.auto>create</hibernate.hbm2ddl.auto>
				<hibernate.cache.use_second_level_cache>true
				</hibernate.cache.use_second_level_cache>
				<hibernate.generate_ddl>true</hibernate.generate_ddl>
			</properties>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
			</build>
		</profile>
		<profile>
			<id>stage</id>
			<properties>
				<jdbc.driverClass>org.h2.Driver</jdbc.driverClass>
				<jdbc.url>jdbc:h2:tcp://localhost/~/test</jdbc.url>
				<jdbc.user>sa</jdbc.user>
				<jdbc.password></jdbc.password>
				<hibernate.database>H2</hibernate.database>
				<hibernate.dialect>org.hibernate.dialect.H2Dialect
				</hibernate.dialect>
				<hibernate.show_sql>true</hibernate.show_sql>
				<hibernate.format_sql>true</hibernate.format_sql>
				<hibernate.generate_statistics>true</hibernate.generate_statistics>
				<hibernate.hbm2ddl.auto>update</hibernate.hbm2ddl.auto>
				<hibernate.cache.use_second_level_cache>true
				</hibernate.cache.use_second_level_cache>
				<hibernate.generate_ddl>true</hibernate.generate_ddl>
			</properties>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
			</build>
		</profile>
		<profile>
			<id>quick</id>
			<properties>
				<maven.test.skip>true</maven.test.skip>
			</properties>
		</profile>
		<profile>
			<id>init</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<!-- common configuration shared by all executions -->
						<configuration>
							<driver>${jdbc.driverClass}</driver>
							<url>${jdbc.url}</url>
							<username>${jdbc.user}</username>
							<password>${jdbc.password}</password>
						</configuration>

						<executions>
							<execution>
								<id>test data</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<!-- specific configuration for this execution -->
								<configuration>
									<!-- specify your SQL commands, can be all of the following configurations -->
									<srcFiles>
										<srcFile>src/test/sql/h2/initial.sql</srcFile>
										<srcFile>src/test/sql/h2/test.sql</srcFile>
									</srcFiles>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>clover</id>
			<activation>
				<property>
					<name>clover</name>
				</property>
			</activation>
			<build>
				<plugins>
                    <plugin>
                        <groupId>com.atlassian.maven.plugins</groupId>
                        <artifactId>maven-clover2-plugin</artifactId>
                        <version>${clover.version}</version>
                        <configuration>
                            <failOnViolation>false</failOnViolation>
                            <licenseLocation>${basedir}/clover401.license</licenseLocation>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>pre-site</phase>
                                <goals>
                                    <goal>instrument</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
				</plugins>
			</build>

			<reporting>
				<plugins>
                    <plugin>
                        <groupId>com.atlassian.maven.plugins</groupId>
                        <artifactId>maven-clover2-plugin</artifactId>
                        <version>${clover.version}</version>
                    </plugin>
				</plugins>
			</reporting>
		</profile>
	</profiles>
</project>
